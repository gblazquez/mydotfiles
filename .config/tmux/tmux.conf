# INFO
# tmuxcheatsheet: https://tmuxcheatsheet.com
# Remember to do <prefix> + I to update the configuration

# # Fixes colors in neovim when open with tmux
set-option -sa terminal-overrides ",xterm*:Tc"

# Plugins
# prefix + I - to [I]nstall plugins
# prefix + U - to [U]pdate plugins
# prefix + alt + u - to [U]ninstall plugins that are not in the list
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'catppuccin/tmux'
# To respect titles
set -g @catppuccin_window_default_text "#W"
set -g @catppuccin_window_text "#W"
set -g @catppuccin_window_current_text "#W"

run '~/.config/tmux/plugins/tpm/tpm'

# setw -g automatic-rename on
# setw -g automatic-rename-format to #{pane_current_path}
set -g allow-rename on
set-option -g status-interval 1
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

# use a custom prefix
unbind-key C-b
set-option -g prefix M-Space
bind-key M-Space send-prefix

# mouse support
setw -g mouse on
# Bind middle-click to paste PRIMARY selection
# bind -n MouseDown2Pane run-shell "tmux set-buffer -- \"$(xclip -o -selection primary)\"; tmux paste-buffer"
# I have commented this because it works with shift + MiddleClick

# start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# # In order to rename the windows according to the path
# Does not work...
# set-option -g status-interval 5
# set-option -g automatic-rename on
# set-option -g automatic-rename-format '#{b:pane_current_path}'

# windows
# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n 'C-\' run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
bind C-l send-keys 'C-l'

# sessions
bind -n M-q kill-session

# Windows keybindings
# set vi-mode
set-window-option -g mode-keys vi
bind-key -n M-s split-window -v -c "#{pane_current_path}"
bind-key -n M-v split-window -h -c "#{pane_current_path}"
bind-key -n M-n new-window -c "#{pane_current_path}"
bind-key -n M-t next-window
bind-key -n M-T previous-window
# Shift Alt vim keys to switch windows.
# These conflicts vi mode terminal
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# panes
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key a last-pane
bind-key q display-panes

# keybindings
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel


